#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Beton_control
"""

from database_manager import DatabaseManager

def test_real_tables():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü Beton_control ===\n")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        print("1. –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        db = DatabaseManager('test_beton.db')
        print("‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å—Ç–∞–≤–∫—É –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
        print("\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å—Ç–∞–≤–∫–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏...")
        org_data = {
            'name': '–û–û–û "–°—Ç—Ä–æ–π–ú–æ–Ω—Ç–∞–∂"',
            'contact': '–ò–≤–∞–Ω–æ–≤ –ò.–ò.',
            'phone': '+7-999-123-45-67'
        }
        
        org_id = db.insert_data('organizations', org_data)
        print(f"‚úÖ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –≤—Å—Ç–∞–≤–ª–µ–Ω–∞, ID: {org_id}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å—Ç–∞–≤–∫—É –æ–±—ä–µ–∫—Ç–∞
        print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å—Ç–∞–≤–∫–∏ –æ–±—ä–µ–∫—Ç–∞...")
        obj_data = {
            'org_id': org_id,
            'name': '–ñ–∏–ª–æ–π –¥–æ–º ‚Ññ1',
            'address': '—É–ª. –°—Ç—Ä–æ–∏—Ç–µ–ª–µ–π, 15'
        }
        
        obj_id = db.insert_data('objects', obj_data)
        print(f"‚úÖ –û–±—ä–µ–∫—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω, ID: {obj_id}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å—Ç–∞–≤–∫—É –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
        print("\n4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å—Ç–∞–≤–∫–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏...")
        construction_data = {
            'object_id': obj_id,
            'pour_date': '2024-01-15',
            'element': '–§—É–Ω–¥–∞–º–µ–Ω—Ç',
            'concrete_class': 'B25',
            'frost_resistance': 'F150',
            'water_resistance': 'W6',
            'supplier': '–û–û–û "–ë–µ—Ç–æ–Ω–°—Ç—Ä–æ–π"',
            'concrete_passport': '–ü–°-001/2024',
            'volume_concrete': 25.5,
            'cubes_count': 3,
            'cones_count': 2,
            'slump': '–°2',
            'temperature': '+18¬∞C',
            'temp_measurements': 5,
            'executor': '–ü–µ—Ç—Ä–æ–≤ –ü.–ü.',
            'act_number': '–ê–ö–¢-001/2024',
            'request_number': '–ó–ê–Ø–í–ö–ê-001/2024'
        }
        
        construction_id = db.insert_data('constructions', construction_data)
        print(f"‚úÖ –ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –≤—Å—Ç–∞–≤–ª–µ–Ω–∞, ID: {construction_id}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
        print("\n5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö...")
        
        # –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
        orgs = db.get_all_data('organizations')
        print(f"‚úÖ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π: {len(orgs)}")
        for org in orgs:
            print(f"   - ID: {org[0]}, –ù–∞–∑–≤–∞–Ω–∏–µ: {org[1]}")
        
        # –û–±—ä–µ–∫—Ç—ã
        objs = db.get_all_data('objects')
        print(f"‚úÖ –û–±—ä–µ–∫—Ç–æ–≤: {len(objs)}")
        for obj in objs:
            print(f"   - ID: {obj[0]}, –ù–∞–∑–≤–∞–Ω–∏–µ: {obj[2]}, –ê–¥—Ä–µ—Å: {obj[3]}")
        
        # –ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
        constructions = db.get_all_data('constructions')
        print(f"‚úÖ –ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π: {len(constructions)}")
        for const in constructions:
            print(f"   - ID: {const[0]}, –≠–ª–µ–º–µ–Ω—Ç: {const[3]}, –ö–ª–∞—Å—Å: {const[4]}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
        print("\n6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π...")
        concrete_classes = db.fetch_distinct('constructions', 'concrete_class')
        print(f"‚úÖ –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã –±–µ—Ç–æ–Ω–∞: {concrete_classes}")
        
        frost_resistances = db.fetch_distinct('constructions', 'frost_resistance')
        print(f"‚úÖ –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –º–æ—Ä–æ–∑–æ—Å—Ç–æ–π–∫–æ—Å—Ç–∏: {frost_resistances}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        print("\n7. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö...")
        update_data = {'volume_concrete': 30.0}
        success = db.update_data('constructions', update_data, 'id = ?', (construction_id,))
        if success:
            print("‚úÖ –û–±—ä–µ–º –±–µ—Ç–æ–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        updated_row = db.execute_single('SELECT volume_concrete FROM constructions WHERE id = ?', (construction_id,))
        if updated_row:
            print(f"   - –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –æ–±—ä–µ–º: {updated_row[0]} –º¬≥")
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
    
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        if 'db' in locals():
            db.close()
            print("\nüîí –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ")
        
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –±–∞–∑—É
        import os
        if os.path.exists('test_beton.db'):
            os.remove('test_beton.db')
            print("üóëÔ∏è  –¢–µ—Å—Ç–æ–≤–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–¥–∞–ª–µ–Ω–∞")

if __name__ == "__main__":
    test_real_tables()
